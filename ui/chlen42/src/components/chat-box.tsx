"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/5o8Wwynb6Lg
 */
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import ChatBubble from "./chat-bubble";
import { useCallback, useEffect, useReducer, useRef, useState } from "react";
import { ScrollArea } from "./ui/scroll-area";

type Message = {
  content: string;
  fromBot: boolean;
};

export function ChatBox() {
  const [typedMessage, setTypedMessage] = useState("");
  const [messages, setMessages] = useState<Message[]>([]);
  const inputRef = useRef<HTMLInputElement>(null);

  const send = useCallback(() => {
    if (typedMessage === "") return;

    setMessages((prev) => [...prev, { content: typedMessage, fromBot: false }]);
    // clear input
    setTypedMessage("");
    if (inputRef.current) {
      inputRef.current.value = "";
    }
  }, [typedMessage]);

  useEffect(() => {
    const sendMsg = (e: KeyboardEvent) => {
      if (e.key === "Enter") {
        send();
      }
    };

    addEventListener("keydown", sendMsg);

    return () => {
      removeEventListener("keydown", sendMsg);
    };
  });

  return (
    <div className="w-100 h-full flex flex-col gap-2">
      <ScrollArea className="h-full">
        <div className="flex flex-col gap-2 pr-5">
          {messages.map((msg, i) => (
            <ChatBubble
              key={i}
              name={msg.fromBot ? "Bot" : "You"}
              message={msg.content}
              other={msg.fromBot}
            />
          ))}
        </div>
      </ScrollArea>
      <div className="flex gap-2">
        <Input
          ref={inputRef}
          onChange={(el) => {
            setTypedMessage(el.target.value);
          }}
        />
        <Button onClick={send}>Search</Button>
      </div>
    </div>
  );
}
